---
import { getEntry } from "astro:content";
import YandexMetrika from "../shared/metrika/YandexMetrika.astro";
import Seo from "../shared/seo/Seo.astro";
import "../styles/global.css";

interface Props {
  title: string;
  description: string;
  keywords?: string | string[];
  image?: string;
}

const { data } = await getEntry("seo", "base");
---

<!doctype html>
<html lang="ru">
  <head>
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <Seo ogImage={data.favicon} {...data} />
    <script is:inline>
      const getThemePreference = () => {
        if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script>
  </head>
  <body>
    <slot />
    <style is:global>
      /*   Подключаем шрифты тут  */
    </style>
    <!-- Подключаем метрику тут -->
    <YandexMetrika />
  </body>
</html>
